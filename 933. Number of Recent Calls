/*
Implement the RecentCounter class:

RecentCounter() Initializes the counter with zero recent requests.
int ping(int t) Adds a new request at time t, where t represents some time in milliseconds, and returns the number of requests that has happened in the past 3000 milliseconds (including the new request). Specifically, return the number of requests that have happened in the inclusive range [t - 3000, t].
It is guaranteed that every call to ping uses a strictly larger value of t than the previous call.

Example:
Input - [[], [1], [100], [3001], [3002]]
Output - [null, 1, 2, 3, 3]
*/


class RecentCounter {
    
    Queue<Integer> queue = new LinkedList<>();

    public RecentCounter() {
    }
    
    public int ping(int t) {
        // Add the request to queue in order
        queue.add(t);
        
        // To check queue is not empty and end element is out of 3000ms timeframe
        while(!queue.isEmpty() && queue.peek() < t-3000){
            queue.remove();
        }
        return queue.size();
    }
}