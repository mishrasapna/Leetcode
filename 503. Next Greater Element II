 public class Solution {

//     public int[] nextGreaterElements(int[] nums) {
//         int[] res = new int[nums.length];
//         Stack<Integer> stack = new Stack<>();
//         for (int i = 2 * nums.length - 1; i >= 0; --i) {
//             while (!stack.empty() && nums[stack.peek()] <= nums[i % nums.length]) {
//                 stack.pop();
//             }
//             res[i % nums.length] = stack.empty() ? -1 : nums[stack.peek()];
//             stack.push(i % nums.length);
//             //System.out.println(Arrays.toString(res));
//         }
//         return res;
//     }
     
     
      public int[] nextGreaterElements(int[] A) {
        int n = A.length, res[] = new int[n];
        Arrays.fill(res, -1);
        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < n * 2; i++) {
            while (!stack.isEmpty() && A[stack.peek()] < A[i % n])
                res[stack.pop()] = A[i % n];
            stack.push(i % n);
        }
        return res;
    }
 }
