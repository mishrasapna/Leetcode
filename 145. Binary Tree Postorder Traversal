/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    List<Integer> res = new ArrayList<>();  
    
    //root = 0 

//if curr is not null 

// goto left.child 
// set this node to current 
// call the helper method recursively until the left most element 
// Add the current element 
// check for right element
// if yes -- add right else add the root element.

// go to the root
    
    public List<Integer> postorderTraversal(TreeNode root) {
        if (root != null){
            if (root.left != null)  postorderTraversal(root.left);
            if (root.right != null) postorderTraversal(root.right);
            res.add(root.val);           
            
        }
               
        return res;
        
        
        
        
    }
}
